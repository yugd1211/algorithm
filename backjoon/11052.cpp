#include <iostream>
#include <algorithm>

// 문제풀이
// 1 부터 N까지의 카드수에대해 최대값을 순차적으로 구해나가면 되는 문제이다.
// 말로만 하면 쉽지만 처음 코드로 적으려니 살짝 어려웠다.
// 결국 2중 for문을 써야되는데 더 좋은 선택지가 있나 고민했지만 떠오르지 않았따.
// 각각의 카드수에 대해 최대값을 구하는 방법은 다음과 같다.
// 자신의 카드수와 이전 카드들의 조합중 뭐가 더큰지 비교를 해나가면 되는데
// 이때 이전의 값들은 모두최대치로 업데이트 해나갔다는게 포인트이다.
// 그러면 '현재 카드수 - i + dp[i]' 와 'dp[현재 카드수]' 를 비교하면된다.
// 물론 i 는 0부터 현재 카드 수까지이다.

// 다음 입력을 예시로 들어본다.
// 4
// 1 5 6 7
// 1부터 최대치를 업데이트 해나간다.
// 1은 처음이기 때문에 dp[1] = 1으로 업데이트된다.

// 2는 다음과 같다.
// dp[2] = max(dp[2], dp[2 - 1] + arr[1]);
// >> dp[2] = max(5, 1 + 1);

// 3은 다음과 같다.
// dp[3] = max(dp[3], dp[3 - 1] + arr[1]);
// >> dp[3] = max(6, 5 + 1);
// dp[3] = max(dp[3], dp[3 - 2] + arr[2]);
// >> dp[3] = max(6, 1 + 5);

// 4는 다음과 같다.
// dp[4] = max(dp[4], dp[4 - 1] + arr[1]);
// >> dp[4] = max(7, 6 + 1);
// dp[4] = max(dp[4], dp[4 - 2] + arr[2]);
// >> dp[4] = max(7, 5 + 5);
// dp[4] = max(dp[4], dp[4 - 3] + arr[3]);
// >> dp[4] = max(10, 1 + 6);
// 이렇게 dp[4] = 10이 된다.




using namespace std;

int N;

int arr[1002];
int dp[1002];

int main()
{
	cin >> N;
	for (int i = 1; i <= N; i++)
		cin >> arr[i];
	for (int i = 1; i <= N; i++)
	{
		dp[i] = arr[i];
		for (int j = 1; j <= i; j++)
			dp[i] = max(dp[i], dp[i - j] + arr[j]);
	}
	cout << dp[N];
}